// Generated by CoffeeScript 1.3.3
(function() {
  var Minion, os, qs,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  os = require("os");

  qs = require("querystring");

  Minion = (function() {

    function Minion() {
      this.onMessage = __bind(this.onMessage, this);
      process.on('message', this.onMessage);
    }

    Minion.prototype.onMessage = function(msg) {
      var data;
      switch (msg.action) {
        case "mem":
          data = process.memoryUsage();
          break;
        case "load":
          data = os.loadavg();
          break;
        default:
          data = {};
      }
      if (process.send) {
        return process.send({
          action: msg.action,
          data: data
        });
      }
    };

    Minion.prototype.log = function(action, data) {
      if (process.send) {
        return process.send({
          action: action,
          data: data
        });
      }
    };

    Minion.prototype.logRequest = function(query, raw) {
      if (raw == null) {
        raw = false;
      }
      if (raw) {
        query = qs.parse(query.url.slice(2));
      }
      return this.log("request", query.id);
    };

    Minion.prototype.started = function() {
      return this.log("started", 1);
    };

    return Minion;

  })();

  module.exports = Minion;

}).call(this);
